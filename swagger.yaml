swagger: "2.0"
info:
  description: "This is a sample server for a configuration management API."
  version: "1.0.0"
  title: "Config API"
host: "localhost:8080"
basePath: "/"
schemes:
  - "http"
paths:
  /config/:
    post:
      summary: "Add a new config"
      operationId: "addConfig"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "config"
          description: "Config object that needs to be added"
          required: true
          schema:
            $ref: "#/definitions/Config"
      responses:
        201:
          description: "Config created"
        400:
          description: "Invalid input"
        415:
          description: "Unsupported Media Type"
  /config/{name}/{version}/:
    get:
      summary: "Get an existing config"
      operationId: "getConfig"
      produces:
        - "application/json"
      parameters:
        - name: "name"
          in: "path"
          description: "Name of the config"
          required: true
          type: "string"
        - name: "version"
          in: "path"
          description: "Version of the config"
          required: true
          type: "number"
          format: "float"
      responses:
        200:
          description: "Config retrieved"
          schema:
            $ref: "#/definitions/Config"
        404:
          description: "Config not found"
    delete:
      summary: "Delete an existing config"
      operationId: "deleteConfig"
      parameters:
        - name: "name"
          in: "path"
          description: "Name of the config"
          required: true
          type: "string"
        - name: "version"
          in: "path"
          description: "Version of the config"
          required: true
          type: "number"
          format: "float"
      responses:
        204:
          description: "Config deleted"
        404:
          description: "Config not found"
  /configGroup/:
    post:
      summary: "Create a new config group"
      operationId: "createConfigGroup"
      consumes:
        - "application/json"
      produces:
        - "application/json"
      parameters:
        - in: "body"
          name: "configGroup"
          description: "Config Group object that needs to be added"
          required: true
          schema:
            $ref: "#/definitions/ConfigGroup"
      responses:
        201:
          description: "Config Group created"
        400:
          description: "Invalid input"
  /configGroup/{name}/{version}/:
    get:
      summary: "Get an existing config group"
      operationId: "getConfigGroup"
      produces:
        - "application/json"
      parameters:
        - name: "name"
          in: "path"
          description: "Name of the config group"
          required: true
          type: "string"
        - name: "version"
          in: "path"
          description: "Version of the config group"
          required: true
          type: "number"
          format: "float"
      responses:
        200:
          description: "Config Group retrieved"
          schema:
            $ref: "#/definitions/ConfigGroup"
        404:
          description: "Config Group not found"
    delete:
      summary: "Delete an existing config group"
      operationId: "deleteConfigGroup"
      parameters:
        - name: "name"
          in: "path"
          description: "Name of the config group"
          required: true
          type: "string"
        - name: "version"
          in: "path"
          description: "Version of the config group"
          required: true
          type: "number"
          format: "float"
      responses:
        204:
          description: "Config Group deleted"
        404:
          description: "Config Group not found"
definitions:
  Config:
    type: "object"
    required:
      - "name"
      - "version"
      - "parameters"
    properties:
      name:
        type: "string"
        description: "Name of the Config"
      version:
        type: "number"
        format: "float"
        description: "Version of the Config"
      parameters:
        type: "object"
        additionalProperties:
          type: "string"
        description: "Parameters of the Config"
  ConfigGroup:
    type: "object"
    required:
      - "name"
      - "version"
    properties:
      name:
        type: "string"
        description: "Name of the Config Group"
      version:
        type: "number"
        format: "float"
        description: "Version of the Config Group"
      configs:
        type: "array"
        items:
          $ref: "#/definitions/Config"
  ConfigForGroup:
    type: "object"
    required:
      - "name"
      - "version"
      - "parameters"
    properties:
      name:
        type: "string"
        description: "Name of the Config"
      version:
        type: "number"
        format: "float"
        description: "Version of the Config"
      parameters:
        type: "object"
        additionalProperties:
          type: "string"
        description: "Parameters of the Config"
responses:
  ErrorResponse:
    description: "Error response"
    headers:
      message:
        description: "Message of the error"
        type: "string"
      status:
        description: "Error status code"
        type: "integer"
        format: "int64"
  NoContentResponse:
    description: "No content"
  ResponseConfig:
    description: "Response with a config"
    headers:
      name:
        description: "Name of the Config"
        type: "string"
      parameters:
        description: "Parameters of the Config"
        type: "string"
      version:
        description: "Version of the Config"
        type: "number"
        format: "float"
    schema:
      type: "object"
      additionalProperties:
        type: "string"
  ResponseConfigForGroup:
    description: "Response with a config for group"
    headers:
      labels:
        description: "Labels of the ConfigForGroup"
        type: "string"
      name:
        description: "Name of the ConfigForGroup"
        type: "string"
      parameters:
        description: "Parameters of the ConfigForGroup"
        type: "string"
    schema:
      type: "object"
      additionalProperties:
        type: "string"
  ResponseConfigGroup:
    description: "Response with a config group"
    schema:
      type: "object"
      properties:
        configurations:
          description: "Configurations of the ConfigGroup"
          type: "array"
          items:
            $ref: "#/definitions/ConfigForGroup"
        name:
          description: "Name of the ConfigGroup"
          type: "string"
        version:
          description: "Version of the ConfigGroup"
          type: "number"
          format: "float"