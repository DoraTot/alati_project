version: '3.8'

services:
  server:
    build:
      context: .
      dockerfile: Dockerfile
    restart: always
    container_name: "config-server"
    hostname: "config-server"
    ports:
      - "8000:8000"
    environment:
      - PORT=8000
      - DB=consul
      - DBHOST=consul
      - DBPORT=8500
      - JAEGER_ADDRESS=http://jaeger:14268/api/traces
      - SERVICE_ADDRESS=http://server:8000
    depends_on:
      - consul
      - tracing
    networks:
      - network
    volumes:
      - ./swagger.yaml:/app/swagger.yaml

  consul:
    image: hashicorp/consul:latest
    ports:
      - "8500:8500"
      - "8600:8600/tcp"
      - "8600:8600/udp"
    command: "agent -server -ui -node=server-1 -bootstrap-expect=1 -client=0.0.0.0"
    networks:
      - network
    volumes:
      - ./consul-volume:/consul/data

  prometheus:
    image: prom/prometheus:latest
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - ./prometheus-data:/prometheus
    networks:
      - network

  swagger-ui:
    image: swaggerapi/swagger-ui
    ports:
      - "8081:8080"  # Expose Swagger UI on a different port
    environment:
      - SWAGGER_JSON=/app/swagger.yaml
    volumes:
      - ./swagger.yaml:/app/swagger.yaml:ro  # Mount swagger.yaml into the Swagger UI container
    depends_on:
      - server
    networks:
      - network

  tracing:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    ports:
      - "6831:6831/udp"
      - "16686:16686"
      - "14268:14268"
      - "4318:4318"
    environment:
      - COLLECTOR_ZIPKIN_HTTP_PORT=9411
    networks:
      - network

networks:
  network:
    driver: bridge

